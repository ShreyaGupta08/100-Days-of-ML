
Day 1: So on day 1, I started about with the algorithm I had been avoiding for the past 4 months: Decision Tree. The ultimate aim for coding (the simple) DT is to discover the beauty of Random Forest. So it happened in the following steps:
1. Found an easier dataset 'tennis' which contains only 15 samples with 4 attributes.
2. loading (for the first time) a csv file, extracting features and target variable, playing with the data a little.
3. Here comes the first procrastiantion: the first function. Started writing the code for finding the entropy of the system.
	I told myself finding the entropy of the system is extremely easy, so let's do this. Wrote the formula on a whiteboard and coded it in jupyter notebook (it wasn't that easy, hi-fear, but yes)
4. Coding Info Gain. Ah it is tough for the procrastinated mind. Followed the technique in step 3, finally coded for Information gain. Suffered through a lot of syntantical issues (hi-beginner-in-python me) but when the final informarion gains of all the attributes were displayed, I couldn't keep myself from exclamating. Safe to say the breakfast went good.
5. Found the feature for root node. But...
Here comes the ultimate dreaded part: constructing a tree. So since I hadn't ever created a class before and was finally getting a comfort zone around basic python, this was a bump in the path: moving out of the comfort zone.

Let's take it to day 2.

Lessons: 
1. I learned if I didn't write on the whiteboard, it was probably not that clear/effectiev to me what I wanted to code. Also writing on the board made it easier and handy to refer back to something in case of confusion.
2. Don't think about the loong code still ahead of you, but of the shorter simplier snippets. It worked magics for me and I ended up farther from where I had thought in a shorter span.

Reminder: Don't be afraid to move out of your comfort zone. You can do this, baby-steps at a time.  
